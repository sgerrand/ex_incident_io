name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    needs: test

    env:
      MIX_ENV: test

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      id: setup-beam
      uses: erlef/setup-beam@v1
      with:
        version-file: '.tool-versions'
        version-type: 'strict'
    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v4
      with:
        path: |
          _build
          deps
        key: ${{ runner.os }}-${{ steps.setup-beam.otp-version }}-${{ steps.setup-beam.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-${{ steps.setup-beam.otp-version }}-${{ steps.setup-beam.elixir-version }}-
    - name: Install and compile dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: mix do deps.get --only test, deps.compile
    - name: Compile code
      run: mix compile
    - name: Generate code coverage
      run: mix coveralls.lcov
    - name: Upload coverage reports to Coveralls
      uses: coverallsapp/github-action@v2

  credo:
    name: Static analysis
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      id: setup-beam
      uses: erlef/setup-beam@v1
      with:
        version-file: '.tool-versions'
        version-type: 'strict'
    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v4
      with:
        path: |
          _build
          deps
        key: ${{ runner.os }}-${{ steps.setup-beam.otp-version }}-${{ steps.setup-beam.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-${{ steps.setup-beam.otp-version }}-${{ steps.setup-beam.elixir-version }}-
    - name: Install and compile dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: mix do deps.get --only test, deps.compile
    - name: Compile code
      run: mix compile
    - name: Run static analysis
      run: mix credo

  dependencies:
    name: Dependencies
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      id: setup-beam
      uses: erlef/setup-beam@v1
      with:
        version-file: '.tool-versions'
        version-type: 'strict'
    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v4
      with:
        path: deps
        key: deps-${{ runner.os }}-${{ steps.setup-beam.otp-version }}-${{ steps.setup-beam.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: deps-${{ runner.os }}-${{ steps.setup-beam.otp-version }}-${{ steps.setup-beam.elixir-version }}-
    - name: Install and compile dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: mix deps.get
    - name: Check for unused dependencies
      run: mix deps.unlock --check-unused

  formatting:
    name: Formatting
    runs-on: ubuntu-latest

    env:
      MIX_ENV: test

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      id: setup-beam
      uses: erlef/setup-beam@v1
      with:
        version-file: '.tool-versions'
        version-type: 'strict'
    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v4
      with:
        path: |
          _build
          deps
        key: ${{ runner.os }}-${{ steps.setup-beam.otp-version }}-${{ steps.setup-beam.elixir-version }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-${{ steps.setup-beam.otp-version }}-${{ steps.setup-beam.elixir-version }}-
    - name: Install and compile dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: mix do deps.get --only test, deps.compile
    - name: Check code format
      run: mix format --check-formatted

  test:
    name: Tests (Elixir ${{ matrix.elixir }} / OTP ${{ matrix.otp }})
    runs-on: ubuntu-latest
    needs: [credo, dependencies, formatting]

    strategy:
      matrix:
        otp: ['24', '25', '26', '27']
        elixir: ['1.15', '1.16', '1.17', '1.18']
        exclude:
          - elixir: '1.15'
            otp: '27'
          - elixir: '1.16'
            otp: '27'
          - elixir: '1.17'
            otp: '24'
          - elixir: '1.18'
            otp: '24'

    env:
      MIX_ENV: test

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@v1
      with:
        elixir-version: ${{matrix.elixir}}
        otp-version: ${{matrix.otp}}
    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v4
      with:
        path: |
          _build
          deps
        key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-
    - name: Install and compile dependencies
      if: steps.cache-deps.outputs.cache-hit != 'true'
      run: mix do deps.get --only test, deps.compile
    - name: Compile code
      run: mix compile
    - name: Run tests
      run: mix test
